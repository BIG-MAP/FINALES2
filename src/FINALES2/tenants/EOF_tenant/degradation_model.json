{
  "quantity": "degradationEOL",
  "method": "degradation_model",
  "json_schema_specifications": {
    "$defs": {
      "BatteryChemistry": {
        "description": "A description of the chemistry of a cell.\n    ",
        "properties": {
          "electrolyte": {
            "description": "The definition of the composition of the electrolyte used in the cells, for which the prediction shall be made",
            "items": {
              "$ref": "#/$defs/FormulationComponent"
            },
            "title": "Electrolyte",
            "type": "array"
          },
          "anode": {
            "allOf": [
              {
                "$ref": "#/$defs/Electrode"
              }
            ],
            "description": "The definition of the anode."
          },
          "cathode": {
            "allOf": [
              {
                "$ref": "#/$defs/Electrode"
              }
            ],
            "description": "The definition of the cathode."
          }
        },
        "required": [
          "electrolyte",
          "anode",
          "cathode"
        ],
        "title": "BatteryChemistry",
        "type": "object"
      },
      "Chemical": {
        "description": "Subclass",
        "properties": {
          "SMILES": {
            "description": "A SMILES string representing the chemical.",
            "title": "Smiles",
            "type": "string"
          },
          "InChIKey": {
            "description": "The hashed standard International Chemical Identifier of the chemical to ensure machine-readability.",
            "title": "Inchikey",
            "type": "string"
          }
        },
        "required": [
          "SMILES",
          "InChIKey"
        ],
        "title": "Chemical",
        "type": "object"
      },
      "Electrode": {
        "description": "The definition of an electrode.\n\n    :param BaseModel: _description_\n    :type BaseModel: _type_\n    ",
        "properties": {
          "material": {
            "description": "The description of the composition of the electrode.",
            "items": {
              "$ref": "#/$defs/FormulationComponent"
            },
            "title": "Material",
            "type": "array"
          },
          "mass_loading": {
            "description": "The capacity per unit area of the electrode. Unit: milliampere_hour / centimeter ** 2",
            "title": "Mass Loading",
            "type": "number",
            "unit": "milliampere_hour / centimeter ** 2"
          },
          "size": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "The area of the electrode, which is cut to a circular shape.",
            "title": "Size",
            "unit": "centimeter ** 2"
          }
        },
        "required": [
          "material",
          "mass_loading",
          "size"
        ],
        "title": "Electrode",
        "type": "object"
      },
      "FormulationComponent": {
        "description": "This class shall be used when referring to chemicals as a component in a formulation.\n    When assembling a formulation based on FormulationComponents, consider, that it\n    might be required to use the same fraction type for all the chemicals.\n    ",
        "properties": {
          "chemical": {
            "allOf": [
              {
                "$ref": "#/$defs/Chemical"
              }
            ],
            "description": "The chemical, which shall be described as a component in a solution ."
          },
          "fraction": {
            "description": "The unitless fraction of the chemical in the total of the mixture.",
            "title": "Fraction",
            "type": "number"
          },
          "fraction_type": {
            "description": "A string defining, what kind of a fraction is given in the formulation. This can be for example molar fractions, volume fractions, mass fractions,.... At the moment only molar fractions are supported.",
            "title": "Fraction Type",
            "type": "string"
          }
        },
        "required": [
          "chemical",
          "fraction",
          "fraction_type"
        ],
        "title": "FormulationComponent",
        "type": "object"
      }
    },
    "description": "The parameters used by the following method\n    'degradationEOL' - degradationModel\n\n    :param BaseModel: _description_\n    :type BaseModel: _type_\n    ",
    "properties": {
      "chemistry": {
        "allOf": [
          {
            "$ref": "#/$defs/BatteryChemistry"
          }
        ],
        "description": "The description of the chemicals involved in all the battery cell."
      },
      "input_cycles": {
        "description": "The number of cycles provided as an input to the model.",
        "title": "Input Cycles",
        "type": "integer"
      },
      "average_charging_rate": {
        "description": "The average C-rate used for charging of the cell in the cycles provided as an input. Unit: 1 / hour",
        "title": "Average Charging Rate",
        "type": "number",
        "unit": "1 / hour"
      },
      "maximum_charging_rate": {
        "description": "The maximum C-rate used for charging of the cell in the cycles provided as an input. Unit: 1 / hour",
        "title": "Maximum Charging Rate",
        "type": "number",
        "unit": "1 / hour"
      },
      "minimum_charging_rate": {
        "description": "The minimum C-rate used for charging of the cell in the cycles provided as an input. Unit: 1 / hour",
        "title": "Minimum Charging Rate",
        "type": "number",
        "unit": "1 / hour"
      },
      "delta_coulombic_efficiency": {
        "description": "The difference in coulombic efficiency between cycle x and 10.",
        "title": "Delta Coulombic Efficiency",
        "type": "number"
      },
      "voltage_gap_charge_discharge": {
        "description": "The difference of the voltage gap between charge and discharge between cycle x and 10. Unit: volt",
        "title": "Voltage Gap Charge Discharge",
        "type": "number",
        "unit": "volt"
      },
      "capacity_vector_variance": {
        "description": "The variance of the difference between the Q(V) curves between cycle x and 10.",
        "title": "Capacity Vector Variance",
        "type": "number"
      },
      "data_path": {
        "description": "The path, where the data wo work on can be accessed. This is relevant as the data files are large and cannot easily be sent via FINALES.",
        "title": "Data Path",
        "type": "string"
      }
    },
    "required": [
      "chemistry",
      "input_cycles",
      "average_charging_rate",
      "maximum_charging_rate",
      "minimum_charging_rate",
      "delta_coulombic_efficiency",
      "voltage_gap_charge_discharge",
      "capacity_vector_variance",
      "data_path"
    ],
    "title": "DegradationModelInput",
    "type": "object"
  },
  "json_schema_result_output": {
    "$defs": {
      "Chemical": {
        "description": "Subclass",
        "properties": {
          "SMILES": {
            "description": "A SMILES string representing the chemical.",
            "title": "Smiles",
            "type": "string"
          },
          "InChIKey": {
            "description": "The hashed standard International Chemical Identifier of the chemical to ensure machine-readability.",
            "title": "Inchikey",
            "type": "string"
          }
        },
        "required": [
          "SMILES",
          "InChIKey"
        ],
        "title": "Chemical",
        "type": "object"
      },
      "ChemicalInfo": {
        "description": "Additional information about a chemical, which is relevant for documentation\n    purposes",
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "A human readable name of the chemical, to which this information is referring.",
            "title": "Name"
          },
          "molar_mass": {
            "anyOf": [
              {
                "maxItems": 2,
                "minItems": 2,
                "prefixItems": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "The molar mass of the chemical and the correcponding uncertainty. This may be a measured quantity or a literature value. It is needed to convert between volumetric and molar ratios and this field serves to report the used value. Unit: gram / mole",
            "title": "Molar Mass",
            "unit": "gram / mole"
          },
          "density": {
            "anyOf": [
              {
                "maxItems": 2,
                "minItems": 2,
                "prefixItems": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "The density of the chemical and the correcponding uncertainty. This may be a measured quantity or a literature value. It is needed to convert between volumetric and molar ratios and this field serves to report the used value. Unit: centimeter ** 3 * gram",
            "title": "Density",
            "unit": "centimeter ** 3 * gram"
          },
          "batch": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "A batch number for the chemical used, if it is available.",
            "title": "Batch"
          },
          "manufacturer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The manufacturer of the chemical, if it is available.",
            "title": "Manufacturer"
          },
          "manufacturing_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The date when the chemical was manufactured.",
            "title": "Manufacturing Date"
          }
        },
        "required": [
          "name",
          "molar_mass",
          "density",
          "batch",
          "manufacturer",
          "manufacturing_date"
        ],
        "title": "ChemicalInfo",
        "type": "object"
      },
      "DegradationEOLOutput": {
        "description": "Results returned from the following quantities:\n    'degradationEOL' - degradationModel\n\n    :param BaseModel: _description_\n    :type BaseModel: _type_\n    ",
        "properties": {
          "end_of_life": {
            "description": "The predicted end of life for the cell.",
            "title": "End Of Life",
            "type": "integer"
          },
          "end_of_life_uncertainty": {
            "description": "The uncertainty of the predicted end of life for the cell.",
            "title": "End Of Life Uncertainty",
            "type": "number"
          },
          "capacity_trajectory": {
            "description": "The predicted capacity evolution for future cycles. Unit: milliampere_hour",
            "items": {
              "type": "number"
            },
            "title": "Capacity Trajectory",
            "type": "array",
            "unit": "milliampere_hour"
          },
          "capacity_trajectory_uncertainty": {
            "description": "The uncertainty associated with each datapoint in the predicted capacity evolution. Unit: milliampere_hour",
            "items": {
              "type": "number"
            },
            "title": "Capacity Trajectory Uncertainty",
            "type": "array",
            "unit": "milliampere_hour"
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/$defs/MethodMeta"
              }
            ],
            "description": "This field provides information regarding the reliability of the reported data. E.g. the success of the method for this quantity and the rating of the data. This is for this specific quantity, because a single method could fail individually for different quantities. It is not included in the RunInfo as one run may generate data for different quantities, for which the methods may fail individually."
          }
        },
        "required": [
          "end_of_life",
          "end_of_life_uncertainty",
          "capacity_trajectory",
          "capacity_trajectory_uncertainty",
          "meta"
        ],
        "title": "DegradationEOLOutput",
        "type": "object"
      },
      "FormulationComponent": {
        "description": "This class shall be used when referring to chemicals as a component in a formulation.\n    When assembling a formulation based on FormulationComponents, consider, that it\n    might be required to use the same fraction type for all the chemicals.\n    ",
        "properties": {
          "chemical": {
            "allOf": [
              {
                "$ref": "#/$defs/Chemical"
              }
            ],
            "description": "The chemical, which shall be described as a component in a solution ."
          },
          "fraction": {
            "description": "The unitless fraction of the chemical in the total of the mixture.",
            "title": "Fraction",
            "type": "number"
          },
          "fraction_type": {
            "description": "A string defining, what kind of a fraction is given in the formulation. This can be for example molar fractions, volume fractions, mass fractions,.... At the moment only molar fractions are supported.",
            "title": "Fraction Type",
            "type": "string"
          }
        },
        "required": [
          "chemical",
          "fraction",
          "fraction_type"
        ],
        "title": "FormulationComponent",
        "type": "object"
      },
      "FormulationInfo": {
        "description": "Additional information about a formulation, which is relevant for documentation\n    purposes",
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "A human readable name of the formulation.",
            "title": "Name"
          },
          "uuid": {
            "anyOf": [
              {
                "format": "uuid",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "A unique identifier assigned to this formulation in this run.",
            "title": "Uuid"
          },
          "preparation_date": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The date when the formulation was prepared. For commercial formulations, the manufacturing date may be used.",
            "title": "Preparation Date"
          },
          "batch": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "A batch number for the formulation, if it is available.",
            "title": "Batch"
          }
        },
        "required": [
          "name",
          "uuid",
          "preparation_date",
          "batch"
        ],
        "title": "FormulationInfo",
        "type": "object"
      },
      "MethodMeta": {
        "description": "Additional information obtained from a method summarizing information, whether \n    the method was successfully run and what the rating for the returned data is.\n    ",
        "properties": {
          "success": {
            "description": "This reports, if the method finished successfully.",
            "title": "Success",
            "type": "boolean"
          },
          "rating": {
            "description": "This field serves to rate the quality of the result from the tenant side. It shall serve as a support for the recieving party upon evaluating the trustworthiness of the result. It shall range from 0 (lowest) to 5 (highest).",
            "title": "Rating",
            "type": "integer"
          }
        },
        "required": [
          "success",
          "rating"
        ],
        "title": "MethodMeta",
        "type": "object"
      },
      "RunInfo": {
        "description": "Metadata for a run of a method. This information may apply to all samples\n    processed in the respective run.\n    ",
        "properties": {
          "formulation": {
            "description": "This is a formulation defining the Chemicals contained in thesample and their fraction in the total mixture.",
            "items": {
              "$ref": "#/$defs/FormulationComponent"
            },
            "title": "Formulation",
            "type": "array"
          },
          "internal_reference": {
            "description": "This field is an internal ID identifying this run of the method. In experimental setups, this may reference to an ID of the sample.",
            "format": "uuid",
            "title": "Internal Reference",
            "type": "string"
          },
          "formulation_info": {
            "anyOf": [
              {
                "$ref": "#/$defs/FormulationInfo"
              },
              {
                "type": "null"
              }
            ],
            "description": "This is the metadata concerning the formulation relevant for documentation."
          },
          "chemicals_info": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/$defs/ChemicalInfo"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "description": "This is a dictionary of metadata of the chemicals relevant for documentation. The keys are InChIKeys of the chemicals contained in the formulation and the values are ChemicalInfo objects.",
            "title": "Chemicals Info"
          }
        },
        "required": [
          "formulation",
          "internal_reference",
          "formulation_info",
          "chemicals_info"
        ],
        "title": "RunInfo",
        "type": "object"
      }
    },
    "properties": {
      "run_info": {
        "allOf": [
          {
            "$ref": "#/$defs/RunInfo"
          }
        ],
        "description": "The information regarding the formulation and the internal reference, which is common for all data generated in this run of the method."
      },
      "degradationEOL": {
        "allOf": [
          {
            "$ref": "#/$defs/DegradationEOLOutput"
          }
        ],
        "description": "The data corresponding to the end of life for the cell and the degradation trajectory, each with the respective uncertainty."
      }
    },
    "required": [
      "run_info",
      "degradationEOL"
    ],
    "title": "DegradationModelOutput",
    "type": "object"
  },
  "is_active": true
}
